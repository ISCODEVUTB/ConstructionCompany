name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  analyze:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write  # Required for SonarCloud analysis
      checks: write  # Needed for PR decoration

    steps:
      # 1. Checkout code (full history)
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Setup Python
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0'

      # 3. Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov==6.1.1

      # 5. Run tests with coverage
      - name: Run tests with coverage
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest --cov=backend --cov-report=xml:coverage.xml --junitxml=test-reports.xml tests/

      # 6. Fix coverage paths
      - name: Fix coverage paths
        run: |
          sed -i "s|$(pwd)|/github/workspace|g" coverage.xml

      # 7. SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatic
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Must be configured in repo secrets
        with:
          args: >
            -Dsonar.projectKey=ISCODEVUTB_ConstructionCompany
            -Dsonar.organization=deviscoutb
            -Dsonar.python.version=3.12
            -Dsonar.sources=backend
            -Dsonar.tests=tests
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.xunit.reportPath=test-reports.xml
            -Dsonar.exclusions=venv/**,tests/**,**/__pycache__/**
            -Dsonar.cpd.exclusions=**/tests/**
            -Dsonar.verbose=true