name: Análisis SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  analizar:
    name: Análisis con SonarCloud
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      checks: write

    steps:
      # 1. Obtener el código
      - name: Obtener código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Configurar Python
      - name: Configurar Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0'

      # 3. Instalar dependencias
      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ... (los primeros pasos igual que arriba)

      # 4. Ejecutar pruebas básicas
      - name: Ejecutar pruebas
        run: |
          pytest --cov=backend --cov-report=xml:coverage.xml --junitxml=test-reports.xml backend/test/

      # 5. Análisis SonarCloud
      - name: Escaneo SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ISCODEVUTB_ConstructionCompany
            -Dsonar.organization=deviscoutb
            -Dsonar.python.version=3.12
            -Dsonar.sources=backend
            -Dsonar.tests=backend/test
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.xunit.reportPath=test-reports.xml
            -Dsonar.exclusions=venv/**,**/__pycache__/**