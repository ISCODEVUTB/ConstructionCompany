name: SonarCloud Analysis

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  analyze:
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      checks: write

    steps:
      # 1. Checkout del código
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # 3. Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      # 4. Verificar estructura
      - name: Verify project structure
        run: |
          echo "Project structure:"
          ls -R
          echo "Test directory exists: $(if [ -d 'src/backend/app/test' ]; then echo 'Yes'; else echo 'No'; fi)"
          echo "Source directory exists: $(if [ -d 'src/backend/app' ]; then echo 'Yes'; else echo 'No'; fi)"

      # 5. Ejecutar pruebas
      - name: Run tests
        run: |
          cd src/backend/app
          PYTHONPATH=$PYTHONPATH:$(pwd)/../.. pytest --cov=. --cov-report=xml:../../../coverage.xml --junitxml=../../../test-reports.xml tests/

      # 6. Análisis SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ISCODEVUTB_ConstructionCompany
            -Dsonar.organization=deviscoutb
            -Dsonar.python.version=3.12
            -Dsonar.sources=src/backend/app
            -Dsonar.tests=src/backend/app/test
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.xunit.reportPath=test-reports.xml
            -Dsonar.exclusions=venv/**,**/__pycache__/**,coverage/**,docs/**
            -Dsonar.working.directory=.
            -Dsonar.verbose=true