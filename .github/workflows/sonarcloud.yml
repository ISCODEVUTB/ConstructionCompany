name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze on SonarCloud
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del código (con historial completo)
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necesario para el análisis de SonarCloud

      # 2. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0'

      # 3. Instalar dependencias
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov

      # 4. Ejecutar pruebas con cobertura
      - name: Run tests with coverage
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          coverage run --source=backend -m pytest tests --junitxml=test-reports.xml
          coverage xml -o coverage.xml

      # 5. Ajustar rutas en coverage.xml (solo si es necesario)
      - name: Fix Coverage File Paths
        run: |
          # Reemplaza la ruta base del workspace de GitHub
          sed -i "s|$(pwd)|/github/workspace|g" coverage.xml

      # 6. Análisis con SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ISCODEVUTB_ConstructionCompany
            -Dsonar.organization=deviscoutb
            -Dsonar.python.version=3.12
            -Dsonar.sources=backend
            -Dsonar.tests=tests
            -Dsonar.coverageReportPaths=coverage.xml
            -Dsonar.junit.reportPaths=test-reports.xml
            -Dsonar.exclusions=venv/**,tests/**
            -Dsonar.cpd.exclusions=**/tests/**